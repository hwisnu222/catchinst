name: Build PyQt app and Release

on:
  push:
    branches: ["main"]
    tags:
      - "v*.*.*"
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build for ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout kode
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Instal Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build Executable with PyInstaller
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            separator=";"
          else
            separator=":"
          fi

          pyinstaller --onefile --windowed \
            main.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: CatchInst-${{ matrix.os }}
          path: dist/*
          retention-days: 7

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: success() && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Rename Assets for Unique Uploads
        shell: bash
        run: |
          for DIR in artifacts/*; do
            if [ -d "$DIR" ]; then
              OS_NAME=$(basename "$DIR" | sed 's/CatchInst-App-//')
              
              if [ -f "$DIR/main.exe" ]; then
                mv "$DIR/main.exe" "$DIR/$OS_NAME.exe"
                echo "Renamed $DIR/main.exe to $DIR/$OS_NAME.exe"
              
              elif [ -f "$DIR/main" ]; then
                mv "$DIR/main" "$DIR/$OS_NAME"
                echo "Renamed $DIR/main to $DIR/$OS_NAME"
              fi
            fi
          done

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          files: artifacts/*/*
          token: ${{ secrets.ACTION_TOKEN }}
